{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@videogular/ngx-videogular/core';\nimport { VgStates, VgCoreModule } from '@videogular/ngx-videogular/core';\n\nclass VgOverlayPlayComponent {\n  constructor(ref, API, fsAPI, controlsHidden) {\n    this.API = API;\n    this.fsAPI = fsAPI;\n    this.controlsHidden = controlsHidden;\n    this.vgSkipIfControlsHidden = false;\n    this.vgSkipIfControlsHiddenDelay = 0.5;\n    this.isNativeFullscreen = false;\n    this.areControlsHidden = false;\n    this.areControlsHiddenChangeTime = 0;\n    this.subscriptions = [];\n    this.isBuffering = false;\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe(isBuffering => this.onUpdateBuffer(isBuffering)));\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  onChangeFullscreen(fsState) {\n    if (this.fsAPI.nativeFullscreen) {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden) {\n    if (this.vgSkipIfControlsHidden && this.areControlsHidden != hidden) {\n      this.areControlsHiddenChangeTime = Date.now();\n    }\n\n    this.areControlsHidden = hidden;\n  }\n\n  onClick() {\n    if (this.vgSkipIfControlsHidden && (this.areControlsHidden || Date.now() - this.areControlsHiddenChangeTime < this.vgSkipIfControlsHiddenDelay * 1000)) {\n      return;\n    }\n\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    let state = VgStates.VG_PAUSED;\n\n    if (this.target) {\n      if (this.target.state instanceof Array) {\n        for (let i = 0, l = this.target.state.length; i < l; i++) {\n          if (this.target.state[i] === VgStates.VG_PLAYING) {\n            state = VgStates.VG_PLAYING;\n            break;\n          }\n        }\n      } else {\n        state = this.target.state;\n      }\n    }\n\n    return state;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n/** @nocollapse */\n\n\nVgOverlayPlayComponent.ɵfac = function VgOverlayPlayComponent_Factory(t) {\n  return new (t || VgOverlayPlayComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.VgApiService), i0.ɵɵdirectiveInject(i1.VgFullscreenApiService), i0.ɵɵdirectiveInject(i1.VgControlsHiddenService));\n};\n/** @nocollapse */\n\n\nVgOverlayPlayComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgOverlayPlayComponent,\n  selectors: [[\"vg-overlay-play\"]],\n  hostVars: 2,\n  hostBindings: function VgOverlayPlayComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function VgOverlayPlayComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\",\n    vgSkipIfControlsHidden: \"vgSkipIfControlsHidden\",\n    vgSkipIfControlsHiddenDelay: \"vgSkipIfControlsHiddenDelay\"\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"vg-overlay-play\"], [1, \"overlay-play-container\"]],\n  template: function VgOverlayPlayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"vg-icon-play_arrow\", ctx.getState() !== \"playing\");\n    }\n  },\n  styles: [\"vg-overlay-play{z-index:200}vg-overlay-play.is-buffering{display:none}vg-overlay-play .vg-overlay-play{transition:all .5s;cursor:pointer;position:absolute;display:block;color:#fff;width:100%;height:100%;font-size:80px;filter:alpha(opacity=60);opacity:.6}vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden{cursor:none}vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow{pointer-events:none;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;font-size:80px}vg-overlay-play .vg-overlay-play:hover{filter:alpha(opacity=100);opacity:1}vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before{transform:scale(1.2)}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgOverlayPlayComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vg-overlay-play',\n      encapsulation: ViewEncapsulation.None,\n      template: `<div\n    class=\"vg-overlay-play\"\n    [class.native-fullscreen]=\"isNativeFullscreen\"\n    [class.controls-hidden]=\"areControlsHidden\"\n  >\n    <div\n      class=\"overlay-play-container\"\n      [class.vg-icon-play_arrow]=\"getState() !== 'playing'\"\n    ></div>\n  </div>`,\n      styles: [\"vg-overlay-play{z-index:200}vg-overlay-play.is-buffering{display:none}vg-overlay-play .vg-overlay-play{transition:all .5s;cursor:pointer;position:absolute;display:block;color:#fff;width:100%;height:100%;font-size:80px;filter:alpha(opacity=60);opacity:.6}vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden{cursor:none}vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow{pointer-events:none;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;font-size:80px}vg-overlay-play .vg-overlay-play:hover{filter:alpha(opacity=100);opacity:1}vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before{transform:scale(1.2)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.VgApiService\n    }, {\n      type: i1.VgFullscreenApiService\n    }, {\n      type: i1.VgControlsHiddenService\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    vgSkipIfControlsHidden: [{\n      type: Input\n    }],\n    vgSkipIfControlsHiddenDelay: [{\n      type: Input\n    }],\n    isBuffering: [{\n      type: HostBinding,\n      args: ['class.is-buffering']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nclass VgOverlayPlayModule {}\n/** @nocollapse */\n\n\nVgOverlayPlayModule.ɵfac = function VgOverlayPlayModule_Factory(t) {\n  return new (t || VgOverlayPlayModule)();\n};\n/** @nocollapse */\n\n\nVgOverlayPlayModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgOverlayPlayModule\n});\n/** @nocollapse */\n\nVgOverlayPlayModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, VgCoreModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgOverlayPlayModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, VgCoreModule],\n      declarations: [VgOverlayPlayComponent],\n      exports: [VgOverlayPlayComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { VgOverlayPlayComponent, VgOverlayPlayModule };","map":{"version":3,"names":["i0","Component","ViewEncapsulation","Input","HostBinding","HostListener","NgModule","CommonModule","i1","VgStates","VgCoreModule","VgOverlayPlayComponent","constructor","ref","API","fsAPI","controlsHidden","vgSkipIfControlsHidden","vgSkipIfControlsHiddenDelay","isNativeFullscreen","areControlsHidden","areControlsHiddenChangeTime","subscriptions","isBuffering","elem","nativeElement","ngOnInit","isPlayerReady","onPlayerReady","push","playerReadyEvent","subscribe","target","getMediaById","vgFor","onChangeFullscreen","bind","isHidden","onHideControls","bufferDetected","onUpdateBuffer","fsState","nativeFullscreen","hidden","Date","now","onClick","state","getState","VG_PLAYING","pause","VG_PAUSED","VG_ENDED","play","Array","i","l","length","ngOnDestroy","forEach","s","unsubscribe","ɵfac","ElementRef","VgApiService","VgFullscreenApiService","VgControlsHiddenService","ɵcmp","type","args","selector","encapsulation","None","template","styles","VgOverlayPlayModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/home/softradix/Documents/Rohit/Angular/video-test-task/node_modules/@videogular/ngx-videogular/fesm2020/videogular-ngx-videogular-overlay-play.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@videogular/ngx-videogular/core';\nimport { VgStates, VgCoreModule } from '@videogular/ngx-videogular/core';\n\nclass VgOverlayPlayComponent {\n    constructor(ref, API, fsAPI, controlsHidden) {\n        this.API = API;\n        this.fsAPI = fsAPI;\n        this.controlsHidden = controlsHidden;\n        this.vgSkipIfControlsHidden = false;\n        this.vgSkipIfControlsHiddenDelay = 0.5;\n        this.isNativeFullscreen = false;\n        this.areControlsHidden = false;\n        this.areControlsHiddenChangeTime = 0;\n        this.subscriptions = [];\n        this.isBuffering = false;\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe((isBuffering) => this.onUpdateBuffer(isBuffering)));\n    }\n    onUpdateBuffer(isBuffering) {\n        this.isBuffering = isBuffering;\n    }\n    onChangeFullscreen(fsState) {\n        if (this.fsAPI.nativeFullscreen) {\n            this.isNativeFullscreen = fsState;\n        }\n    }\n    onHideControls(hidden) {\n        if (this.vgSkipIfControlsHidden && this.areControlsHidden != hidden) {\n            this.areControlsHiddenChangeTime = Date.now();\n        }\n        this.areControlsHidden = hidden;\n    }\n    onClick() {\n        if (this.vgSkipIfControlsHidden && (this.areControlsHidden || (Date.now() - this.areControlsHiddenChangeTime) < this.vgSkipIfControlsHiddenDelay * 1000)) {\n            return;\n        }\n        const state = this.getState();\n        switch (state) {\n            case VgStates.VG_PLAYING:\n                this.target.pause();\n                break;\n            case VgStates.VG_PAUSED:\n            case VgStates.VG_ENDED:\n                this.target.play();\n                break;\n        }\n    }\n    getState() {\n        let state = VgStates.VG_PAUSED;\n        if (this.target) {\n            if (this.target.state instanceof Array) {\n                for (let i = 0, l = this.target.state.length; i < l; i++) {\n                    if (this.target.state[i] === VgStates.VG_PLAYING) {\n                        state = VgStates.VG_PLAYING;\n                        break;\n                    }\n                }\n            }\n            else {\n                state = this.target.state;\n            }\n        }\n        return state;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\n/** @nocollapse */ VgOverlayPlayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgOverlayPlayComponent, deps: [{ token: i0.ElementRef }, { token: i1.VgApiService }, { token: i1.VgFullscreenApiService }, { token: i1.VgControlsHiddenService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ VgOverlayPlayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.6\", type: VgOverlayPlayComponent, selector: \"vg-overlay-play\", inputs: { vgFor: \"vgFor\", vgSkipIfControlsHidden: \"vgSkipIfControlsHidden\", vgSkipIfControlsHiddenDelay: \"vgSkipIfControlsHiddenDelay\" }, host: { listeners: { \"click\": \"onClick()\" }, properties: { \"class.is-buffering\": \"this.isBuffering\" } }, ngImport: i0, template: `<div\n    class=\"vg-overlay-play\"\n    [class.native-fullscreen]=\"isNativeFullscreen\"\n    [class.controls-hidden]=\"areControlsHidden\"\n  >\n    <div\n      class=\"overlay-play-container\"\n      [class.vg-icon-play_arrow]=\"getState() !== 'playing'\"\n    ></div>\n  </div>`, isInline: true, styles: [\"vg-overlay-play{z-index:200}vg-overlay-play.is-buffering{display:none}vg-overlay-play .vg-overlay-play{transition:all .5s;cursor:pointer;position:absolute;display:block;color:#fff;width:100%;height:100%;font-size:80px;filter:alpha(opacity=60);opacity:.6}vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden{cursor:none}vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow{pointer-events:none;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;font-size:80px}vg-overlay-play .vg-overlay-play:hover{filter:alpha(opacity=100);opacity:1}vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before{transform:scale(1.2)}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgOverlayPlayComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vg-overlay-play', encapsulation: ViewEncapsulation.None, template: `<div\n    class=\"vg-overlay-play\"\n    [class.native-fullscreen]=\"isNativeFullscreen\"\n    [class.controls-hidden]=\"areControlsHidden\"\n  >\n    <div\n      class=\"overlay-play-container\"\n      [class.vg-icon-play_arrow]=\"getState() !== 'playing'\"\n    ></div>\n  </div>`, styles: [\"vg-overlay-play{z-index:200}vg-overlay-play.is-buffering{display:none}vg-overlay-play .vg-overlay-play{transition:all .5s;cursor:pointer;position:absolute;display:block;color:#fff;width:100%;height:100%;font-size:80px;filter:alpha(opacity=60);opacity:.6}vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden{cursor:none}vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow{pointer-events:none;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;font-size:80px}vg-overlay-play .vg-overlay-play:hover{filter:alpha(opacity=100);opacity:1}vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before{transform:scale(1.2)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.VgApiService }, { type: i1.VgFullscreenApiService }, { type: i1.VgControlsHiddenService }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], vgSkipIfControlsHidden: [{\n                type: Input\n            }], vgSkipIfControlsHiddenDelay: [{\n                type: Input\n            }], isBuffering: [{\n                type: HostBinding,\n                args: ['class.is-buffering']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass VgOverlayPlayModule {\n}\n/** @nocollapse */ VgOverlayPlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgOverlayPlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ VgOverlayPlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.6\", ngImport: i0, type: VgOverlayPlayModule, declarations: [VgOverlayPlayComponent], imports: [CommonModule, VgCoreModule], exports: [VgOverlayPlayComponent] });\n/** @nocollapse */ VgOverlayPlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgOverlayPlayModule, imports: [CommonModule, VgCoreModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgOverlayPlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, VgCoreModule],\n                    declarations: [VgOverlayPlayComponent],\n                    exports: [VgOverlayPlayComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VgOverlayPlayComponent, VgOverlayPlayModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}