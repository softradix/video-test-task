{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, Component, ViewEncapsulation, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\nconst _c0 = [\"*\"];\n\nclass VgStates {}\n\nVgStates.VG_ENDED = 'ended';\nVgStates.VG_PAUSED = 'paused';\nVgStates.VG_PLAYING = 'playing';\nVgStates.VG_LOADING = 'waiting';\n/** @nocollapse */\n\nVgStates.ɵfac = function VgStates_Factory(t) {\n  return new (t || VgStates)();\n};\n/** @nocollapse */\n\n\nVgStates.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgStates,\n  factory: VgStates.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgStates, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass VgApiService {\n  constructor() {\n    this.medias = {}; // TODO: refactor to Set<IPlayable>\n\n    this.playerReadyEvent = new EventEmitter(true);\n    this.isPlayerReady = false;\n  }\n\n  onPlayerReady(fsAPI) {\n    this.fsAPI = fsAPI;\n    this.isPlayerReady = true;\n    this.playerReadyEvent.emit(this);\n  }\n\n  getDefaultMedia() {\n    for (const item in this.medias) {\n      if (this.medias[item]) {\n        return this.medias[item];\n      }\n    }\n  }\n\n  getMasterMedia() {\n    let master;\n\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        master = this.medias[id];\n        break;\n      }\n    }\n\n    return master || this.getDefaultMedia();\n  }\n\n  isMasterDefined() {\n    let result = false;\n\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  getMediaById(id = null) {\n    let media = this.medias[id];\n\n    if (!id || id === '*') {\n      media = this;\n    }\n\n    return media;\n  }\n\n  play() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].play();\n      }\n    }\n  }\n\n  pause() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].pause();\n      }\n    }\n  }\n\n  get duration() {\n    return this.$$getAllProperties('duration');\n  }\n\n  set currentTime(seconds) {\n    this.$$setAllProperties('currentTime', seconds);\n  }\n\n  get currentTime() {\n    return this.$$getAllProperties('currentTime');\n  }\n\n  set state(state) {\n    this.$$setAllProperties('state', state);\n  }\n\n  get state() {\n    return this.$$getAllProperties('state');\n  }\n\n  set volume(volume) {\n    this.$$setAllProperties('volume', volume);\n  }\n\n  get volume() {\n    return this.$$getAllProperties('volume');\n  }\n\n  set playbackRate(rate) {\n    this.$$setAllProperties('playbackRate', rate);\n  }\n\n  get playbackRate() {\n    return this.$$getAllProperties('playbackRate');\n  }\n\n  get canPlay() {\n    return this.$$getAllProperties('canPlay');\n  }\n\n  get canPlayThrough() {\n    return this.$$getAllProperties('canPlayThrough');\n  }\n\n  get isMetadataLoaded() {\n    return this.$$getAllProperties('isMetadataLoaded');\n  }\n\n  get isWaiting() {\n    return this.$$getAllProperties('isWaiting');\n  }\n\n  get isCompleted() {\n    return this.$$getAllProperties('isCompleted');\n  }\n\n  get isLive() {\n    return this.$$getAllProperties('isLive');\n  }\n\n  get isMaster() {\n    return this.$$getAllProperties('isMaster');\n  }\n\n  get time() {\n    return this.$$getAllProperties('time');\n  }\n\n  get buffer() {\n    return this.$$getAllProperties('buffer');\n  }\n\n  get buffered() {\n    return this.$$getAllProperties('buffered');\n  }\n\n  get subscriptions() {\n    return this.$$getAllProperties('subscriptions');\n  }\n\n  get textTracks() {\n    return this.$$getAllProperties('textTracks');\n  }\n\n  seekTime(value, byPercent = false) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$seek(this.medias[id], value, byPercent);\n      }\n    }\n  }\n\n  $$seek(media, value, byPercent = false) {\n    let second;\n    let duration = media.duration;\n\n    if (byPercent) {\n      if (this.isMasterDefined()) {\n        duration = this.getMasterMedia().duration;\n      }\n\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n\n    media.currentTime = second;\n  }\n\n  addTextTrack(type, label, language) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$addTextTrack(this.medias[id], type, label, language);\n      }\n    }\n  }\n\n  $$addTextTrack(media, type, label, language) {\n    media.addTextTrack(type, label, language);\n  }\n\n  $$getAllProperties(property) {\n    const medias = {};\n    let result;\n\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        medias[id] = this.medias[id];\n      }\n    }\n\n    const nMedias = Object.keys(medias).length;\n\n    switch (nMedias) {\n      case 0:\n        // Return default values until vgMedia is initialized\n        switch (property) {\n          case 'state':\n            result = VgStates.VG_PAUSED;\n            break;\n\n          case 'playbackRate':\n          case 'volume':\n            result = 1;\n            break;\n\n          case 'time':\n            result = {\n              current: 0,\n              total: 0,\n              left: 0\n            };\n            break;\n        }\n\n        break;\n\n      case 1:\n        // If there's only one media element then return the plain value\n        const firstMediaId = Object.keys(medias)[0];\n        result = medias[firstMediaId][property];\n        break;\n\n      default:\n        // TODO: return 'master' value\n        const master = this.getMasterMedia();\n        result = medias[master.id][property];\n    }\n\n    return result;\n  }\n\n  $$setAllProperties(property, value) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id][property] = value;\n      }\n    }\n  }\n\n  registerElement(elem) {\n    this.videogularElement = elem;\n  }\n\n  registerMedia(media) {\n    this.medias[media.id] = media;\n  }\n\n  unregisterMedia(media) {\n    delete this.medias[media.id];\n  }\n\n}\n/** @nocollapse */\n\n\nVgApiService.ɵfac = function VgApiService_Factory(t) {\n  return new (t || VgApiService)();\n};\n/** @nocollapse */\n\n\nVgApiService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgApiService,\n  factory: VgApiService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgApiService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass VgControlsHiddenService {\n  constructor() {\n    this.isHiddenSubject = new Subject();\n    this.isHidden = this.isHiddenSubject.asObservable();\n  }\n\n  state(hidden) {\n    this.isHiddenSubject.next(hidden);\n  }\n\n}\n/** @nocollapse */\n\n\nVgControlsHiddenService.ɵfac = function VgControlsHiddenService_Factory(t) {\n  return new (t || VgControlsHiddenService)();\n};\n/** @nocollapse */\n\n\nVgControlsHiddenService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgControlsHiddenService,\n  factory: VgControlsHiddenService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgControlsHiddenService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass VgUtilsService {\n  /**\n   * Inspired by Paul Irish\n   * https://gist.github.com/paulirish/211209\n   */\n  static getZIndex() {\n    let zIndex = 1;\n    let elementZIndex;\n    const tags = document.getElementsByTagName('*');\n\n    for (let i = 0, l = tags.length; i < l; i++) {\n      elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n\n      if (elementZIndex > zIndex) {\n        zIndex = elementZIndex + 1;\n      }\n    }\n\n    return zIndex;\n  } // Very simple mobile detection, not 100% reliable\n\n\n  static isMobileDevice() {\n    // return (\n    //   typeof window.screen.orientation !== 'undefined' ||\n    //   navigator.userAgent.indexOf('IEMobile') !== -1\n    // );\n    // window.orientation is deprecated and we should use window.screen.orientation\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n  }\n\n  static isiOSDevice() {\n    return (navigator.userAgent.match(/ip(hone|ad|od)/i) || VgUtilsService.isIpadOS()) && !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i);\n  }\n\n  static isIpadOS() {\n    return navigator.maxTouchPoints && navigator.maxTouchPoints > 2 && /MacIntel/.test(navigator.platform);\n  }\n\n  static isCordova() {\n    return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n  }\n\n}\n/** @nocollapse */\n\n\nVgUtilsService.ɵfac = function VgUtilsService_Factory(t) {\n  return new (t || VgUtilsService)();\n};\n/** @nocollapse */\n\n\nVgUtilsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgUtilsService,\n  factory: VgUtilsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgUtilsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass VgFullscreenApiService {\n  constructor() {\n    this.nativeFullscreen = true;\n    this.isFullscreen = false;\n    this.onChangeFullscreen = new EventEmitter();\n  }\n\n  init(elem, medias) {\n    this.videogularElement = elem;\n    this.medias = medias;\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror'\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror'\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen',\n        onerror: 'webkitfullscreenerror'\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError'\n      }\n    };\n\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n\n    if (VgUtilsService.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n\n    this.isAvailable = this.polyfill != null;\n\n    if (this.polyfill == null) {\n      return;\n    }\n\n    let fsElemDispatcher;\n\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n      // iOS dispatches the fullscreen change event from video element\n\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n      // HTML5 implementation dispatches the fullscreen change event from the element\n\n      default:\n        fsElemDispatcher = elem;\n    }\n\n    this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n\n  toggleFullscreen(element = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    } else {\n      this.request(element);\n    }\n  }\n\n  request(elem) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true); // Perform native full screen support\n\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtilsService.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if (!this.polyfill.enabled && elem === this.videogularElement || VgUtilsService.isiOSDevice()) {\n          elem = this.medias.toArray()[0].elem;\n        }\n\n        this.enterElementInFullScreen(elem);\n      } else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n\n  enterElementInFullScreen(elem) {\n    elem[this.polyfill.request]();\n  }\n\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false); // Exit from native fullscreen\n\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nVgFullscreenApiService.ɵfac = function VgFullscreenApiService_Factory(t) {\n  return new (t || VgFullscreenApiService)();\n};\n/** @nocollapse */\n\n\nVgFullscreenApiService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgFullscreenApiService,\n  factory: VgFullscreenApiService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgFullscreenApiService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass VgEvents {}\n\nVgEvents.VG_ABORT = 'abort';\nVgEvents.VG_CAN_PLAY = 'canplay';\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\nVgEvents.VG_EMPTIED = 'emptied';\nVgEvents.VG_ENCRYPTED = 'encrypted';\nVgEvents.VG_ENDED = 'ended';\nVgEvents.VG_ERROR = 'error';\nVgEvents.VG_LOADED_DATA = 'loadeddata';\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\nVgEvents.VG_LOAD_START = 'loadstart';\nVgEvents.VG_PAUSE = 'pause';\nVgEvents.VG_PLAY = 'play';\nVgEvents.VG_PLAYING = 'playing';\nVgEvents.VG_PROGRESS = 'progress';\nVgEvents.VG_RATE_CHANGE = 'ratechange';\nVgEvents.VG_SEEK = 'seek';\nVgEvents.VG_SEEKED = 'seeked';\nVgEvents.VG_SEEKING = 'seeking';\nVgEvents.VG_STALLED = 'stalled';\nVgEvents.VG_SUSPEND = 'suspend';\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\nVgEvents.VG_WAITING = 'waiting';\nVgEvents.VG_LOAD = 'load';\nVgEvents.VG_ENTER = 'enter';\nVgEvents.VG_EXIT = 'exit';\nVgEvents.VG_START_ADS = 'startads';\nVgEvents.VG_END_ADS = 'endads';\n/** @nocollapse */\n\nVgEvents.ɵfac = function VgEvents_Factory(t) {\n  return new (t || VgEvents)();\n};\n/** @nocollapse */\n\n\nVgEvents.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgEvents,\n  factory: VgEvents.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgEvents, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass VgCuePointsDirective {\n  constructor(ref) {\n    this.ref = ref;\n    this.onEnterCuePoint = new EventEmitter();\n    this.onUpdateCuePoint = new EventEmitter();\n    this.onExitCuePoint = new EventEmitter();\n    this.onCompleteCuePoint = new EventEmitter();\n    this.subscriptions = [];\n    this.cuesSubscriptions = [];\n    this.totalCues = 0;\n  }\n\n  ngOnInit() {\n    this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n    this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n  }\n\n  onLoad(event) {\n    const cues = event.target.track.cues;\n    this.ref.nativeElement.cues = cues;\n    this.updateCuePoints(cues);\n  }\n\n  updateCuePoints(cues) {\n    this.cuesSubscriptions.forEach(s => s.unsubscribe());\n\n    for (let i = 0, l = cues.length; i < l; i++) {\n      this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n      this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n      this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n      this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n    }\n  }\n\n  onEnter(event) {\n    this.onEnterCuePoint.emit(event.target);\n  }\n\n  onExit(event) {\n    this.onExitCuePoint.emit(event.target);\n  }\n\n  ngDoCheck() {\n    if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n      const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n\n      if (changes) {\n        this.totalCues = this.ref.nativeElement.track.cues.length;\n        this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n        this.updateCuePoints(this.ref.nativeElement.track.cues);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n/** @nocollapse */\n\n\nVgCuePointsDirective.ɵfac = function VgCuePointsDirective_Factory(t) {\n  return new (t || VgCuePointsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n/** @nocollapse */\n\n\nVgCuePointsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgCuePointsDirective,\n  selectors: [[\"\", \"vgCuePoints\", \"\"]],\n  outputs: {\n    onEnterCuePoint: \"onEnterCuePoint\",\n    onUpdateCuePoint: \"onUpdateCuePoint\",\n    onExitCuePoint: \"onExitCuePoint\",\n    onCompleteCuePoint: \"onCompleteCuePoint\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCuePointsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgCuePoints]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    onEnterCuePoint: [{\n      type: Output\n    }],\n    onUpdateCuePoint: [{\n      type: Output\n    }],\n    onExitCuePoint: [{\n      type: Output\n    }],\n    onCompleteCuePoint: [{\n      type: Output\n    }]\n  });\n})();\n\nclass VgMediaDirective {\n  constructor(api, ref) {\n    this.api = api;\n    this.ref = ref;\n    this.state = VgStates.VG_PAUSED;\n    this.time = {\n      current: 0,\n      total: 0,\n      left: 0\n    };\n    this.buffer = {\n      end: 0\n    };\n    this.canPlay = false;\n    this.canPlayThrough = false;\n    this.isMetadataLoaded = false;\n    this.isWaiting = false;\n    this.isCompleted = false;\n    this.isLive = false;\n    this.isBufferDetected = false;\n    this.checkInterval = 200;\n    this.currentPlayPos = 0;\n    this.lastPlayPos = 0;\n    this.playAtferSync = false;\n    this.bufferDetected = new Subject();\n  }\n\n  ngOnInit() {\n    if (this.vgMedia.nodeName) {\n      // It's a native element\n      this.elem = this.vgMedia;\n    } else {\n      // It's an Angular Class\n      this.elem = this.vgMedia.elem;\n    } // Just in case we're creating this vgMedia dynamically register again into API\n\n\n    this.api.registerMedia(this);\n    this.subscriptions = {\n      // Native events\n      abort: fromEvent(this.elem, VgEvents.VG_ABORT),\n      canPlay: fromEvent(this.elem, VgEvents.VG_CAN_PLAY),\n      canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n      durationChange: fromEvent(this.elem, VgEvents.VG_DURATION_CHANGE),\n      emptied: fromEvent(this.elem, VgEvents.VG_EMPTIED),\n      encrypted: fromEvent(this.elem, VgEvents.VG_ENCRYPTED),\n      ended: fromEvent(this.elem, VgEvents.VG_ENDED),\n      error: fromEvent(this.elem, VgEvents.VG_ERROR),\n      loadedData: fromEvent(this.elem, VgEvents.VG_LOADED_DATA),\n      loadedMetadata: fromEvent(this.elem, VgEvents.VG_LOADED_METADATA),\n      loadStart: fromEvent(this.elem, VgEvents.VG_LOAD_START),\n      pause: fromEvent(this.elem, VgEvents.VG_PAUSE),\n      play: fromEvent(this.elem, VgEvents.VG_PLAY),\n      playing: fromEvent(this.elem, VgEvents.VG_PLAYING),\n      progress: fromEvent(this.elem, VgEvents.VG_PROGRESS),\n      rateChange: fromEvent(this.elem, VgEvents.VG_RATE_CHANGE),\n      seeked: fromEvent(this.elem, VgEvents.VG_SEEKED),\n      seeking: fromEvent(this.elem, VgEvents.VG_SEEKING),\n      stalled: fromEvent(this.elem, VgEvents.VG_STALLED),\n      suspend: fromEvent(this.elem, VgEvents.VG_SUSPEND),\n      timeUpdate: fromEvent(this.elem, VgEvents.VG_TIME_UPDATE),\n      volumeChange: fromEvent(this.elem, VgEvents.VG_VOLUME_CHANGE),\n      waiting: fromEvent(this.elem, VgEvents.VG_WAITING),\n      // Advertisement only events\n      startAds: fromEvent(window, VgEvents.VG_START_ADS),\n      endAds: fromEvent(window, VgEvents.VG_END_ADS),\n      // See changes on <source> child elements to reload the video file\n      mutation: new Observable(observer => {\n        const domObs = new MutationObserver(mutations => {\n          observer.next(mutations);\n        });\n        domObs.observe(this.elem, {\n          childList: true,\n          attributes: true\n        });\n        return () => {\n          domObs.disconnect();\n        };\n      }),\n      // Custom buffering detection\n      bufferDetected: this.bufferDetected\n    };\n    this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n    this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n    this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n    this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n    this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n    this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n    this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n    this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n    this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n    this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n    this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n    this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n    this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n\n    if (this.vgMaster) {\n      this.api.playerReadyEvent.subscribe(() => {\n        this.prepareSync();\n      });\n    }\n  }\n\n  prepareSync() {\n    const canPlayAll = [];\n\n    for (const media in this.api.medias) {\n      if (this.api.medias[media]) {\n        canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n      }\n    }\n\n    this.canPlayAllSubscription = combineLatest(canPlayAll).pipe(map((...params) => {\n      const checkReadyState = event => {\n        if (!event?.target) {\n          return false;\n        }\n\n        return event.target.readyState === 4;\n      };\n\n      const allReady = params.some(checkReadyState);\n\n      if (allReady && !this.syncSubscription) {\n        this.startSync();\n        this.syncSubscription.unsubscribe();\n      }\n    })).subscribe();\n  }\n\n  startSync() {\n    this.syncSubscription = timer(0, 1000).subscribe(() => {\n      for (const media in this.api.medias) {\n        if (this.api.medias[media] !== this) {\n          const diff = this.api.medias[media].currentTime - this.currentTime;\n\n          if (diff < -0.3 || diff > 0.3) {\n            this.playAtferSync = this.state === VgStates.VG_PLAYING;\n            this.pause();\n            this.api.medias[media].pause();\n            this.api.medias[media].currentTime = this.currentTime;\n          } else {\n            if (this.playAtferSync) {\n              this.play();\n              this.api.medias[media].play();\n              this.playAtferSync = false;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  onMutation(mutations) {\n    // Detect changes only for source elements or src attribute\n    for (let i = 0, l = mutations.length; i < l; i++) {\n      const mut = mutations[i];\n\n      if (mut.type === 'attributes' && mut.attributeName === 'src') {\n        // Only load src file if it's not a blob (for DASH / HLS sources)\n        if (mut.target.src && mut.target.src.length > 0 && mut.target.src.indexOf('blob:') < 0) {\n          this.loadMedia();\n          break;\n        }\n      } else if (mut.type === 'childList' && mut.removedNodes.length && mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n        this.loadMedia();\n        break;\n      }\n    }\n  }\n\n  loadMedia() {\n    this.vgMedia.pause();\n    this.vgMedia.currentTime = 0; // Start buffering until we can play the media file\n\n    this.stopBufferCheck();\n    this.isBufferDetected = true;\n    this.bufferDetected.next(this.isBufferDetected); // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n\n    setTimeout(() => this.vgMedia.load(), 10);\n  }\n\n  play() {\n    // short-circuit if already playing\n    if (this.playPromise || this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED) {\n      return;\n    }\n\n    this.playPromise = this.vgMedia.play(); // browser has async play promise\n\n    if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n      this.playPromise.then(() => {\n        this.playPromise = null;\n      }).catch(() => {\n        this.playPromise = null; // deliberately empty for the sake of eating console noise\n      });\n    }\n\n    return this.playPromise;\n  }\n\n  pause() {\n    // browser has async play promise\n    if (this.playPromise) {\n      this.playPromise.then(() => {\n        this.vgMedia.pause();\n      });\n    } else {\n      this.vgMedia.pause();\n    }\n  }\n\n  get id() {\n    // We should return undefined if vgMedia still doesn't exist\n    let result;\n\n    if (this.vgMedia) {\n      result = this.vgMedia.id;\n    }\n\n    return result;\n  }\n\n  get duration() {\n    return this.vgMedia.duration === Infinity ? this.specifiedDuration : this.vgMedia.duration;\n  }\n\n  set currentTime(seconds) {\n    this.vgMedia.currentTime = seconds; // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n  }\n\n  get currentTime() {\n    return this.vgMedia.currentTime;\n  }\n\n  set volume(volume) {\n    this.vgMedia.volume = volume;\n  }\n\n  get volume() {\n    return this.vgMedia.volume;\n  }\n\n  set playbackRate(rate) {\n    this.vgMedia.playbackRate = rate;\n  }\n\n  get playbackRate() {\n    return this.vgMedia.playbackRate;\n  }\n\n  get buffered() {\n    return this.vgMedia.buffered;\n  }\n\n  get textTracks() {\n    return this.vgMedia.textTracks;\n  } // @ts-ignore\n\n\n  onCanPlay(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlay = true;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onCanPlayThrough(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlayThrough = true;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onLoadMetadata(event) {\n    this.isMetadataLoaded = true;\n    this.time = {\n      current: 0,\n      left: 0,\n      total: this.duration * 1000\n    };\n    this.state = VgStates.VG_PAUSED; // Live streaming check\n\n    const t = Math.round(this.time.total);\n    this.isLive = t === Infinity;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onWait(event) {\n    this.isWaiting = true;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onComplete(event) {\n    this.isCompleted = true;\n    this.state = VgStates.VG_ENDED;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onStartPlaying(event) {\n    this.state = VgStates.VG_PLAYING;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onPlay(event) {\n    this.state = VgStates.VG_PLAYING;\n\n    if (this.vgMaster) {\n      if (!this.syncSubscription || this.syncSubscription.closed) {\n        this.startSync();\n      }\n    }\n\n    this.startBufferCheck();\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onPause(event) {\n    this.state = VgStates.VG_PAUSED;\n\n    if (this.vgMaster) {\n      if (!this.playAtferSync) {\n        this.syncSubscription.unsubscribe();\n      }\n    }\n\n    this.stopBufferCheck();\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onTimeUpdate(event) {\n    const end = this.buffered.length - 1;\n    this.time = {\n      current: this.currentTime * 1000,\n      total: this.time.total,\n      left: (this.duration - this.currentTime) * 1000\n    };\n\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onProgress(event) {\n    const end = this.buffered.length - 1;\n\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onVolumeChange(event) {\n    // TODO: Save to localstorage the current volume\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onError(event) {\n    // TODO: Handle error messages\n    this.ref.detectChanges();\n  } // http://stackoverflow.com/a/23828241/779529\n\n\n  bufferCheck() {\n    const offset = 1 / this.checkInterval;\n    this.currentPlayPos = this.currentTime;\n\n    if (!this.isBufferDetected && this.currentPlayPos < this.lastPlayPos + offset) {\n      this.isBufferDetected = true;\n    }\n\n    if (this.isBufferDetected && this.currentPlayPos > this.lastPlayPos + offset) {\n      this.isBufferDetected = false;\n    } // Prevent calls to bufferCheck after ngOnDestroy have been called\n\n\n    if (!this.bufferDetected.closed) {\n      this.bufferDetected.next(this.isBufferDetected);\n    }\n\n    this.lastPlayPos = this.currentPlayPos;\n  }\n\n  startBufferCheck() {\n    this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(() => {\n      this.bufferCheck();\n    });\n  }\n\n  stopBufferCheck() {\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n  }\n\n  seekTime(value, byPercent = false) {\n    let second;\n    const duration = this.duration;\n\n    if (byPercent) {\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n\n    this.currentTime = second;\n  }\n\n  addTextTrack(type, label, language, mode) {\n    const newTrack = this.vgMedia.addTextTrack(type, label, language);\n\n    if (mode) {\n      newTrack.mode = mode;\n    }\n\n    return newTrack;\n  }\n\n  ngOnDestroy() {\n    this.vgMedia.src = '';\n    this.mutationObs?.unsubscribe();\n    this.canPlayObs?.unsubscribe();\n    this.canPlayThroughObs?.unsubscribe();\n    this.loadedMetadataObs?.unsubscribe();\n    this.waitingObs?.unsubscribe();\n    this.progressObs?.unsubscribe();\n    this.endedObs?.unsubscribe();\n    this.playingObs?.unsubscribe();\n    this.playObs?.unsubscribe();\n    this.pauseObs?.unsubscribe();\n    this.timeUpdateObs?.unsubscribe();\n    this.volumeChangeObs?.unsubscribe();\n    this.errorObs?.unsubscribe();\n    this.checkBufferSubscription?.unsubscribe();\n    this.syncSubscription?.unsubscribe();\n    this.bufferDetected?.complete();\n    this.bufferDetected?.unsubscribe();\n    this.api.unregisterMedia(this);\n  }\n\n}\n/** @nocollapse */\n\n\nVgMediaDirective.ɵfac = function VgMediaDirective_Factory(t) {\n  return new (t || VgMediaDirective)(i0.ɵɵdirectiveInject(VgApiService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\n\n\nVgMediaDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgMediaDirective,\n  selectors: [[\"\", \"vgMedia\", \"\"]],\n  inputs: {\n    vgMedia: \"vgMedia\",\n    vgMaster: \"vgMaster\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgMediaDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgMedia]'\n    }]\n  }], function () {\n    return [{\n      type: VgApiService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    vgMedia: [{\n      type: Input\n    }],\n    vgMaster: [{\n      type: Input\n    }]\n  });\n})();\n\nclass VgPlayerComponent {\n  constructor(ref, api, fsAPI, controlsHidden) {\n    this.api = api;\n    this.fsAPI = fsAPI;\n    this.controlsHidden = controlsHidden;\n    this.isFullscreen = false;\n    this.isNativeFullscreen = false;\n    this.areControlsHidden = false;\n    this.onPlayerReady = new EventEmitter();\n    this.onMediaReady = new EventEmitter();\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n    this.api.registerElement(this.elem);\n  }\n\n  ngAfterContentInit() {\n    this.medias.toArray().forEach(media => {\n      this.api.registerMedia(media);\n    });\n    this.fsAPI.init(this.elem, this.medias);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.api.onPlayerReady(this.fsAPI);\n    this.onPlayerReady.emit(this.api);\n  }\n\n  onChangeFullscreen(fsState) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n      this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\n    } else {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden) {\n    this.areControlsHidden = hidden;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n/** @nocollapse */\n\n\nVgPlayerComponent.ɵfac = function VgPlayerComponent_Factory(t) {\n  return new (t || VgPlayerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgApiService), i0.ɵɵdirectiveInject(VgFullscreenApiService), i0.ɵɵdirectiveInject(VgControlsHiddenService));\n};\n/** @nocollapse */\n\n\nVgPlayerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgPlayerComponent,\n  selectors: [[\"vg-player\"]],\n  contentQueries: function VgPlayerComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, VgMediaDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.medias = _t);\n    }\n  },\n  hostVars: 8,\n  hostBindings: function VgPlayerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n      i0.ɵɵclassProp(\"fullscreen\", ctx.isFullscreen)(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n    }\n  },\n  outputs: {\n    onPlayerReady: \"onPlayerReady\",\n    onMediaReady: \"onMediaReady\"\n  },\n  features: [i0.ɵɵProvidersFeature([VgApiService, VgFullscreenApiService, VgControlsHiddenService])],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function VgPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgPlayerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vg-player',\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-content></ng-content>`,\n      providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService],\n      styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgApiService\n    }, {\n      type: VgFullscreenApiService\n    }, {\n      type: VgControlsHiddenService\n    }];\n  }, {\n    isFullscreen: [{\n      type: HostBinding,\n      args: ['class.fullscreen']\n    }],\n    isNativeFullscreen: [{\n      type: HostBinding,\n      args: ['class.native-fullscreen']\n    }],\n    areControlsHidden: [{\n      type: HostBinding,\n      args: ['class.controls-hidden']\n    }],\n    zIndex: [{\n      type: HostBinding,\n      args: ['style.z-index']\n    }],\n    onPlayerReady: [{\n      type: Output\n    }],\n    onMediaReady: [{\n      type: Output\n    }],\n    medias: [{\n      type: ContentChildren,\n      args: [VgMediaDirective]\n    }]\n  });\n})();\n\nconst services = [VgApiService, VgControlsHiddenService, VgFullscreenApiService, VgUtilsService, VgEvents, VgStates];\nconst directives = [VgCuePointsDirective, VgMediaDirective];\n\nclass VgCoreModule {}\n/** @nocollapse */\n\n\nVgCoreModule.ɵfac = function VgCoreModule_Factory(t) {\n  return new (t || VgCoreModule)();\n};\n/** @nocollapse */\n\n\nVgCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgCoreModule\n});\n/** @nocollapse */\n\nVgCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [...services],\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [...services],\n      declarations: [...directives, VgPlayerComponent],\n      exports: [...directives, VgPlayerComponent]\n    }]\n  }], null, null);\n})();\n\nclass VgMediaElement {\n  get audioTracks() {\n    return null;\n  } // @ts-ignore\n\n\n  addTextTrack(kind, label, language) {\n    return null;\n  } // @ts-ignore\n\n\n  canPlayType(type) {\n    return null;\n  }\n\n  load() {}\n\n  msClearEffects() {}\n\n  msGetAsCastingSource() {\n    return null;\n  } // @ts-ignore\n\n\n  msInsertAudioEffect(_activatableClassId, _effectRequired, _config) {} // @ts-ignore\n\n\n  msSetMediaProtectionManager(mediaProtectionManager) {}\n\n  pause() {}\n\n  play() {\n    return null;\n  } // @ts-ignore\n\n\n  setMediaKeys(mediaKeys) {\n    return null;\n  } // @ts-ignore\n\n\n  addEventListener(_type, _listener, _useCapture) {}\n\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { VgApiService, VgControlsHiddenService, VgCoreModule, VgCuePointsDirective, VgEvents, VgFullscreenApiService, VgMediaDirective, VgMediaElement, VgPlayerComponent, VgStates, VgUtilsService };","map":{"version":3,"names":["i0","Injectable","EventEmitter","Directive","Output","Input","Component","ViewEncapsulation","HostBinding","ContentChildren","NgModule","CommonModule","Subject","fromEvent","Observable","combineLatest","timer","map","VgStates","VG_ENDED","VG_PAUSED","VG_PLAYING","VG_LOADING","ɵfac","ɵprov","type","args","providedIn","VgApiService","constructor","medias","playerReadyEvent","isPlayerReady","onPlayerReady","fsAPI","emit","getDefaultMedia","item","getMasterMedia","master","id","vgMaster","isMasterDefined","result","getMediaById","media","play","pause","duration","$$getAllProperties","currentTime","seconds","$$setAllProperties","state","volume","playbackRate","rate","canPlay","canPlayThrough","isMetadataLoaded","isWaiting","isCompleted","isLive","isMaster","time","buffer","buffered","subscriptions","textTracks","seekTime","value","byPercent","$$seek","second","addTextTrack","label","language","$$addTextTrack","property","nMedias","Object","keys","length","current","total","left","firstMediaId","registerElement","elem","videogularElement","registerMedia","unregisterMedia","VgControlsHiddenService","isHiddenSubject","isHidden","asObservable","hidden","next","VgUtilsService","getZIndex","zIndex","elementZIndex","tags","document","getElementsByTagName","i","l","parseInt","window","getComputedStyle","isMobileDevice","orientation","navigator","userAgent","indexOf","isiOSDevice","match","isIpadOS","maxTouchPoints","test","platform","isCordova","URL","VgFullscreenApiService","nativeFullscreen","isFullscreen","onChangeFullscreen","init","APIs","w3","enabled","element","request","exit","onchange","onerror","newWebkit","oldWebkit","moz","ios","ms","browser","polyfill","isAvailable","fsElemDispatcher","toArray","fsChangeSubscription","subscribe","onFullscreenChange","toggleFullscreen","enterElementInFullScreen","VgEvents","VG_ABORT","VG_CAN_PLAY","VG_CAN_PLAY_THROUGH","VG_DURATION_CHANGE","VG_EMPTIED","VG_ENCRYPTED","VG_ERROR","VG_LOADED_DATA","VG_LOADED_METADATA","VG_LOAD_START","VG_PAUSE","VG_PLAY","VG_PROGRESS","VG_RATE_CHANGE","VG_SEEK","VG_SEEKED","VG_SEEKING","VG_STALLED","VG_SUSPEND","VG_TIME_UPDATE","VG_VOLUME_CHANGE","VG_WAITING","VG_LOAD","VG_ENTER","VG_EXIT","VG_START_ADS","VG_END_ADS","VgCuePointsDirective","ref","onEnterCuePoint","onUpdateCuePoint","onExitCuePoint","onCompleteCuePoint","cuesSubscriptions","totalCues","ngOnInit","onLoad$","nativeElement","push","onLoad","bind","event","cues","target","track","updateCuePoints","forEach","s","unsubscribe","onEnter$","onEnter","onExit$","onExit","ngDoCheck","changes","ngOnDestroy","ElementRef","ɵdir","selector","VgMediaDirective","api","end","isBufferDetected","checkInterval","currentPlayPos","lastPlayPos","playAtferSync","bufferDetected","vgMedia","nodeName","abort","durationChange","emptied","encrypted","ended","error","loadedData","loadedMetadata","loadStart","playing","progress","rateChange","seeked","seeking","stalled","suspend","timeUpdate","volumeChange","waiting","startAds","endAds","mutation","observer","domObs","MutationObserver","mutations","observe","childList","attributes","disconnect","mutationObs","onMutation","canPlayObs","onCanPlay","canPlayThroughObs","onCanPlayThrough","loadedMetadataObs","onLoadMetadata","waitingObs","onWait","progressObs","onProgress","endedObs","onComplete","playingObs","onStartPlaying","playObs","onPlay","pauseObs","onPause","timeUpdateObs","onTimeUpdate","volumeChangeObs","onVolumeChange","errorObs","onError","prepareSync","canPlayAll","canPlayAllSubscription","pipe","params","checkReadyState","readyState","allReady","some","syncSubscription","startSync","diff","mut","attributeName","src","loadMedia","removedNodes","toLowerCase","stopBufferCheck","setTimeout","load","playPromise","then","catch","Infinity","specifiedDuration","detectChanges","t","Math","round","closed","startBufferCheck","bufferCheck","offset","checkBufferSubscription","mode","newTrack","complete","ChangeDetectorRef","VgPlayerComponent","controlsHidden","isNativeFullscreen","areControlsHidden","onMediaReady","ngAfterContentInit","onHideControls","fsState","toString","ɵcmp","encapsulation","None","template","providers","styles","services","directives","VgCoreModule","ɵmod","ɵinj","imports","declarations","exports","VgMediaElement","audioTracks","kind","canPlayType","msClearEffects","msGetAsCastingSource","msInsertAudioEffect","_activatableClassId","_effectRequired","_config","msSetMediaProtectionManager","mediaProtectionManager","setMediaKeys","mediaKeys","addEventListener","_type","_listener","_useCapture"],"sources":["/home/softradix/Documents/Rohit/Angular/video-test-task/node_modules/@videogular/ngx-videogular/fesm2020/videogular-ngx-videogular-core.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, Component, ViewEncapsulation, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nclass VgStates {\n}\nVgStates.VG_ENDED = 'ended';\nVgStates.VG_PAUSED = 'paused';\nVgStates.VG_PLAYING = 'playing';\nVgStates.VG_LOADING = 'waiting';\n/** @nocollapse */ VgStates.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgStates, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgStates.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgStates, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgStates, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass VgApiService {\n    constructor() {\n        this.medias = {}; // TODO: refactor to Set<IPlayable>\n        this.playerReadyEvent = new EventEmitter(true);\n        this.isPlayerReady = false;\n    }\n    onPlayerReady(fsAPI) {\n        this.fsAPI = fsAPI;\n        this.isPlayerReady = true;\n        this.playerReadyEvent.emit(this);\n    }\n    getDefaultMedia() {\n        for (const item in this.medias) {\n            if (this.medias[item]) {\n                return this.medias[item];\n            }\n        }\n    }\n    getMasterMedia() {\n        let master;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' ||\n                this.medias[id].vgMaster === true) {\n                master = this.medias[id];\n                break;\n            }\n        }\n        return master || this.getDefaultMedia();\n    }\n    isMasterDefined() {\n        let result = false;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' ||\n                this.medias[id].vgMaster === true) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    }\n    getMediaById(id = null) {\n        let media = this.medias[id];\n        if (!id || id === '*') {\n            media = this;\n        }\n        return media;\n    }\n    play() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].play();\n            }\n        }\n    }\n    pause() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].pause();\n            }\n        }\n    }\n    get duration() {\n        return this.$$getAllProperties('duration');\n    }\n    set currentTime(seconds) {\n        this.$$setAllProperties('currentTime', seconds);\n    }\n    get currentTime() {\n        return this.$$getAllProperties('currentTime');\n    }\n    set state(state) {\n        this.$$setAllProperties('state', state);\n    }\n    get state() {\n        return this.$$getAllProperties('state');\n    }\n    set volume(volume) {\n        this.$$setAllProperties('volume', volume);\n    }\n    get volume() {\n        return this.$$getAllProperties('volume');\n    }\n    set playbackRate(rate) {\n        this.$$setAllProperties('playbackRate', rate);\n    }\n    get playbackRate() {\n        return this.$$getAllProperties('playbackRate');\n    }\n    get canPlay() {\n        return this.$$getAllProperties('canPlay');\n    }\n    get canPlayThrough() {\n        return this.$$getAllProperties('canPlayThrough');\n    }\n    get isMetadataLoaded() {\n        return this.$$getAllProperties('isMetadataLoaded');\n    }\n    get isWaiting() {\n        return this.$$getAllProperties('isWaiting');\n    }\n    get isCompleted() {\n        return this.$$getAllProperties('isCompleted');\n    }\n    get isLive() {\n        return this.$$getAllProperties('isLive');\n    }\n    get isMaster() {\n        return this.$$getAllProperties('isMaster');\n    }\n    get time() {\n        return this.$$getAllProperties('time');\n    }\n    get buffer() {\n        return this.$$getAllProperties('buffer');\n    }\n    get buffered() {\n        return this.$$getAllProperties('buffered');\n    }\n    get subscriptions() {\n        return this.$$getAllProperties('subscriptions');\n    }\n    get textTracks() {\n        return this.$$getAllProperties('textTracks');\n    }\n    seekTime(value, byPercent = false) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$seek(this.medias[id], value, byPercent);\n            }\n        }\n    }\n    $$seek(media, value, byPercent = false) {\n        let second;\n        let duration = media.duration;\n        if (byPercent) {\n            if (this.isMasterDefined()) {\n                duration = this.getMasterMedia().duration;\n            }\n            second = (value * duration) / 100;\n        }\n        else {\n            second = value;\n        }\n        media.currentTime = second;\n    }\n    addTextTrack(type, label, language) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$addTextTrack(this.medias[id], type, label, language);\n            }\n        }\n    }\n    $$addTextTrack(media, type, label, language) {\n        media.addTextTrack(type, label, language);\n    }\n    $$getAllProperties(property) {\n        const medias = {};\n        let result;\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                medias[id] = this.medias[id];\n            }\n        }\n        const nMedias = Object.keys(medias).length;\n        switch (nMedias) {\n            case 0:\n                // Return default values until vgMedia is initialized\n                switch (property) {\n                    case 'state':\n                        result = VgStates.VG_PAUSED;\n                        break;\n                    case 'playbackRate':\n                    case 'volume':\n                        result = 1;\n                        break;\n                    case 'time':\n                        result = { current: 0, total: 0, left: 0 };\n                        break;\n                }\n                break;\n            case 1:\n                // If there's only one media element then return the plain value\n                const firstMediaId = Object.keys(medias)[0];\n                result = medias[firstMediaId][property];\n                break;\n            default:\n                // TODO: return 'master' value\n                const master = this.getMasterMedia();\n                result = medias[master.id][property];\n        }\n        return result;\n    }\n    $$setAllProperties(property, value) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id][property] = value;\n            }\n        }\n    }\n    registerElement(elem) {\n        this.videogularElement = elem;\n    }\n    registerMedia(media) {\n        this.medias[media.id] = media;\n    }\n    unregisterMedia(media) {\n        delete this.medias[media.id];\n    }\n}\n/** @nocollapse */ VgApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgApiService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgApiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgApiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass VgControlsHiddenService {\n    constructor() {\n        this.isHiddenSubject = new Subject();\n        this.isHidden = this.isHiddenSubject.asObservable();\n    }\n    state(hidden) {\n        this.isHiddenSubject.next(hidden);\n    }\n}\n/** @nocollapse */ VgControlsHiddenService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgControlsHiddenService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgControlsHiddenService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgControlsHiddenService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgControlsHiddenService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass VgUtilsService {\n    /**\n     * Inspired by Paul Irish\n     * https://gist.github.com/paulirish/211209\n     */\n    static getZIndex() {\n        let zIndex = 1;\n        let elementZIndex;\n        const tags = document.getElementsByTagName('*');\n        for (let i = 0, l = tags.length; i < l; i++) {\n            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n            if (elementZIndex > zIndex) {\n                zIndex = elementZIndex + 1;\n            }\n        }\n        return zIndex;\n    }\n    // Very simple mobile detection, not 100% reliable\n    static isMobileDevice() {\n        // return (\n        //   typeof window.screen.orientation !== 'undefined' ||\n        //   navigator.userAgent.indexOf('IEMobile') !== -1\n        // );\n        // window.orientation is deprecated and we should use window.screen.orientation\n        return (typeof window.orientation !== 'undefined' ||\n            navigator.userAgent.indexOf('IEMobile') !== -1);\n    }\n    static isiOSDevice() {\n        return ((navigator.userAgent.match(/ip(hone|ad|od)/i) ||\n            VgUtilsService.isIpadOS()) &&\n            !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i));\n    }\n    static isIpadOS() {\n        return (navigator.maxTouchPoints &&\n            navigator.maxTouchPoints > 2 &&\n            /MacIntel/.test(navigator.platform));\n    }\n    static isCordova() {\n        return (document.URL.indexOf('http://') === -1 &&\n            document.URL.indexOf('https://') === -1);\n    }\n}\n/** @nocollapse */ VgUtilsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgUtilsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgUtilsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgUtilsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgUtilsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass VgFullscreenApiService {\n    constructor() {\n        this.nativeFullscreen = true;\n        this.isFullscreen = false;\n        this.onChangeFullscreen = new EventEmitter();\n    }\n    init(elem, medias) {\n        this.videogularElement = elem;\n        this.medias = medias;\n        const APIs = {\n            w3: {\n                enabled: 'fullscreenEnabled',\n                element: 'fullscreenElement',\n                request: 'requestFullscreen',\n                exit: 'exitFullscreen',\n                onchange: 'fullscreenchange',\n                onerror: 'fullscreenerror',\n            },\n            newWebkit: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitRequestFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror',\n            },\n            oldWebkit: {\n                enabled: 'webkitIsFullScreen',\n                element: 'webkitCurrentFullScreenElement',\n                request: 'webkitRequestFullScreen',\n                exit: 'webkitCancelFullScreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror',\n            },\n            moz: {\n                enabled: 'mozFullScreen',\n                element: 'mozFullScreenElement',\n                request: 'mozRequestFullScreen',\n                exit: 'mozCancelFullScreen',\n                onchange: 'mozfullscreenchange',\n                onerror: 'mozfullscreenerror',\n            },\n            ios: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitEnterFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitendfullscreen',\n                onerror: 'webkitfullscreenerror',\n            },\n            ms: {\n                enabled: 'msFullscreenEnabled',\n                element: 'msFullscreenElement',\n                request: 'msRequestFullscreen',\n                exit: 'msExitFullscreen',\n                onchange: 'MSFullscreenChange',\n                onerror: 'MSFullscreenError',\n            },\n        };\n        for (const browser in APIs) {\n            if (APIs[browser].enabled in document) {\n                this.polyfill = APIs[browser];\n                break;\n            }\n        }\n        if (VgUtilsService.isiOSDevice()) {\n            this.polyfill = APIs.ios;\n        }\n        this.isAvailable = this.polyfill != null;\n        if (this.polyfill == null) {\n            return;\n        }\n        let fsElemDispatcher;\n        switch (this.polyfill.onchange) {\n            // Mozilla dispatches the fullscreen change event from document, not the element\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n            case 'mozfullscreenchange':\n                fsElemDispatcher = document;\n                break;\n            // iOS dispatches the fullscreen change event from video element\n            case 'webkitendfullscreen':\n                fsElemDispatcher = this.medias.toArray()[0].elem;\n                break;\n            // HTML5 implementation dispatches the fullscreen change event from the element\n            default:\n                fsElemDispatcher = elem;\n        }\n        this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n            this.onFullscreenChange();\n        });\n    }\n    onFullscreenChange() {\n        this.isFullscreen = !!document[this.polyfill.element];\n        this.onChangeFullscreen.emit(this.isFullscreen);\n    }\n    toggleFullscreen(element = null) {\n        if (this.isFullscreen) {\n            this.exit();\n        }\n        else {\n            this.request(element);\n        }\n    }\n    request(elem) {\n        if (!elem) {\n            elem = this.videogularElement;\n        }\n        this.isFullscreen = true;\n        this.onChangeFullscreen.emit(true);\n        // Perform native full screen support\n        if (this.isAvailable && this.nativeFullscreen) {\n            // Fullscreen for mobile devices\n            if (VgUtilsService.isMobileDevice()) {\n                // We should make fullscreen the video object if it doesn't have native fullscreen support\n                // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n                if ((!this.polyfill.enabled && elem === this.videogularElement) ||\n                    VgUtilsService.isiOSDevice()) {\n                    elem = this.medias.toArray()[0].elem;\n                }\n                this.enterElementInFullScreen(elem);\n            }\n            else {\n                this.enterElementInFullScreen(this.videogularElement);\n            }\n        }\n    }\n    enterElementInFullScreen(elem) {\n        elem[this.polyfill.request]();\n    }\n    exit() {\n        this.isFullscreen = false;\n        this.onChangeFullscreen.emit(false);\n        // Exit from native fullscreen\n        if (this.isAvailable && this.nativeFullscreen) {\n            document[this.polyfill.exit]();\n        }\n    }\n}\n/** @nocollapse */ VgFullscreenApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgFullscreenApiService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgFullscreenApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgFullscreenApiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgFullscreenApiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass VgEvents {\n}\nVgEvents.VG_ABORT = 'abort';\nVgEvents.VG_CAN_PLAY = 'canplay';\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\nVgEvents.VG_EMPTIED = 'emptied';\nVgEvents.VG_ENCRYPTED = 'encrypted';\nVgEvents.VG_ENDED = 'ended';\nVgEvents.VG_ERROR = 'error';\nVgEvents.VG_LOADED_DATA = 'loadeddata';\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\nVgEvents.VG_LOAD_START = 'loadstart';\nVgEvents.VG_PAUSE = 'pause';\nVgEvents.VG_PLAY = 'play';\nVgEvents.VG_PLAYING = 'playing';\nVgEvents.VG_PROGRESS = 'progress';\nVgEvents.VG_RATE_CHANGE = 'ratechange';\nVgEvents.VG_SEEK = 'seek';\nVgEvents.VG_SEEKED = 'seeked';\nVgEvents.VG_SEEKING = 'seeking';\nVgEvents.VG_STALLED = 'stalled';\nVgEvents.VG_SUSPEND = 'suspend';\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\nVgEvents.VG_WAITING = 'waiting';\nVgEvents.VG_LOAD = 'load';\nVgEvents.VG_ENTER = 'enter';\nVgEvents.VG_EXIT = 'exit';\nVgEvents.VG_START_ADS = 'startads';\nVgEvents.VG_END_ADS = 'endads';\n/** @nocollapse */ VgEvents.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgEvents, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgEvents.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgEvents, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgEvents, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass VgCuePointsDirective {\n    constructor(ref) {\n        this.ref = ref;\n        this.onEnterCuePoint = new EventEmitter();\n        this.onUpdateCuePoint = new EventEmitter();\n        this.onExitCuePoint = new EventEmitter();\n        this.onCompleteCuePoint = new EventEmitter();\n        this.subscriptions = [];\n        this.cuesSubscriptions = [];\n        this.totalCues = 0;\n    }\n    ngOnInit() {\n        this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n        this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n    }\n    onLoad(event) {\n        const cues = event.target.track.cues;\n        this.ref.nativeElement.cues = cues;\n        this.updateCuePoints(cues);\n    }\n    updateCuePoints(cues) {\n        this.cuesSubscriptions.forEach((s) => s.unsubscribe());\n        for (let i = 0, l = cues.length; i < l; i++) {\n            this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n            this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n            this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n            this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n        }\n    }\n    onEnter(event) {\n        this.onEnterCuePoint.emit(event.target);\n    }\n    onExit(event) {\n        this.onExitCuePoint.emit(event.target);\n    }\n    ngDoCheck() {\n        if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n            const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n            if (changes) {\n                this.totalCues = this.ref.nativeElement.track.cues.length;\n                this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n                this.updateCuePoints(this.ref.nativeElement.track.cues);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\n/** @nocollapse */ VgCuePointsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgCuePointsDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ VgCuePointsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: VgCuePointsDirective, selector: \"[vgCuePoints]\", outputs: { onEnterCuePoint: \"onEnterCuePoint\", onUpdateCuePoint: \"onUpdateCuePoint\", onExitCuePoint: \"onExitCuePoint\", onCompleteCuePoint: \"onCompleteCuePoint\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgCuePointsDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgCuePoints]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { onEnterCuePoint: [{\n                type: Output\n            }], onUpdateCuePoint: [{\n                type: Output\n            }], onExitCuePoint: [{\n                type: Output\n            }], onCompleteCuePoint: [{\n                type: Output\n            }] } });\n\nclass VgMediaDirective {\n    constructor(api, ref) {\n        this.api = api;\n        this.ref = ref;\n        this.state = VgStates.VG_PAUSED;\n        this.time = { current: 0, total: 0, left: 0 };\n        this.buffer = { end: 0 };\n        this.canPlay = false;\n        this.canPlayThrough = false;\n        this.isMetadataLoaded = false;\n        this.isWaiting = false;\n        this.isCompleted = false;\n        this.isLive = false;\n        this.isBufferDetected = false;\n        this.checkInterval = 200;\n        this.currentPlayPos = 0;\n        this.lastPlayPos = 0;\n        this.playAtferSync = false;\n        this.bufferDetected = new Subject();\n    }\n    ngOnInit() {\n        if (this.vgMedia.nodeName) {\n            // It's a native element\n            this.elem = this.vgMedia;\n        }\n        else {\n            // It's an Angular Class\n            this.elem = this.vgMedia.elem;\n        }\n        // Just in case we're creating this vgMedia dynamically register again into API\n        this.api.registerMedia(this);\n        this.subscriptions = {\n            // Native events\n            abort: fromEvent(this.elem, VgEvents.VG_ABORT),\n            canPlay: fromEvent(this.elem, VgEvents.VG_CAN_PLAY),\n            canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n            durationChange: fromEvent(this.elem, VgEvents.VG_DURATION_CHANGE),\n            emptied: fromEvent(this.elem, VgEvents.VG_EMPTIED),\n            encrypted: fromEvent(this.elem, VgEvents.VG_ENCRYPTED),\n            ended: fromEvent(this.elem, VgEvents.VG_ENDED),\n            error: fromEvent(this.elem, VgEvents.VG_ERROR),\n            loadedData: fromEvent(this.elem, VgEvents.VG_LOADED_DATA),\n            loadedMetadata: fromEvent(this.elem, VgEvents.VG_LOADED_METADATA),\n            loadStart: fromEvent(this.elem, VgEvents.VG_LOAD_START),\n            pause: fromEvent(this.elem, VgEvents.VG_PAUSE),\n            play: fromEvent(this.elem, VgEvents.VG_PLAY),\n            playing: fromEvent(this.elem, VgEvents.VG_PLAYING),\n            progress: fromEvent(this.elem, VgEvents.VG_PROGRESS),\n            rateChange: fromEvent(this.elem, VgEvents.VG_RATE_CHANGE),\n            seeked: fromEvent(this.elem, VgEvents.VG_SEEKED),\n            seeking: fromEvent(this.elem, VgEvents.VG_SEEKING),\n            stalled: fromEvent(this.elem, VgEvents.VG_STALLED),\n            suspend: fromEvent(this.elem, VgEvents.VG_SUSPEND),\n            timeUpdate: fromEvent(this.elem, VgEvents.VG_TIME_UPDATE),\n            volumeChange: fromEvent(this.elem, VgEvents.VG_VOLUME_CHANGE),\n            waiting: fromEvent(this.elem, VgEvents.VG_WAITING),\n            // Advertisement only events\n            startAds: fromEvent(window, VgEvents.VG_START_ADS),\n            endAds: fromEvent(window, VgEvents.VG_END_ADS),\n            // See changes on <source> child elements to reload the video file\n            mutation: new Observable((observer) => {\n                const domObs = new MutationObserver((mutations) => {\n                    observer.next(mutations);\n                });\n                domObs.observe(this.elem, { childList: true, attributes: true });\n                return () => {\n                    domObs.disconnect();\n                };\n            }),\n            // Custom buffering detection\n            bufferDetected: this.bufferDetected,\n        };\n        this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n        this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n        this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n        this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n        this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n        this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n        this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n        this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n        this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n        this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n        this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n        this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n        this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n        if (this.vgMaster) {\n            this.api.playerReadyEvent.subscribe(() => {\n                this.prepareSync();\n            });\n        }\n    }\n    prepareSync() {\n        const canPlayAll = [];\n        for (const media in this.api.medias) {\n            if (this.api.medias[media]) {\n                canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n            }\n        }\n        this.canPlayAllSubscription = combineLatest(canPlayAll)\n            .pipe(map((...params) => {\n            const checkReadyState = (event) => {\n                if (!event?.target) {\n                    return false;\n                }\n                return event.target.readyState === 4;\n            };\n            const allReady = params.some(checkReadyState);\n            if (allReady && !this.syncSubscription) {\n                this.startSync();\n                this.syncSubscription.unsubscribe();\n            }\n        }))\n            .subscribe();\n    }\n    startSync() {\n        this.syncSubscription = timer(0, 1000).subscribe(() => {\n            for (const media in this.api.medias) {\n                if (this.api.medias[media] !== this) {\n                    const diff = this.api.medias[media].currentTime - this.currentTime;\n                    if (diff < -0.3 || diff > 0.3) {\n                        this.playAtferSync = this.state === VgStates.VG_PLAYING;\n                        this.pause();\n                        this.api.medias[media].pause();\n                        this.api.medias[media].currentTime = this.currentTime;\n                    }\n                    else {\n                        if (this.playAtferSync) {\n                            this.play();\n                            this.api.medias[media].play();\n                            this.playAtferSync = false;\n                        }\n                    }\n                }\n            }\n        });\n    }\n    onMutation(mutations) {\n        // Detect changes only for source elements or src attribute\n        for (let i = 0, l = mutations.length; i < l; i++) {\n            const mut = mutations[i];\n            if (mut.type === 'attributes' && mut.attributeName === 'src') {\n                // Only load src file if it's not a blob (for DASH / HLS sources)\n                if (mut.target.src &&\n                    mut.target.src.length > 0 &&\n                    mut.target.src.indexOf('blob:') < 0) {\n                    this.loadMedia();\n                    break;\n                }\n            }\n            else if (mut.type === 'childList' &&\n                mut.removedNodes.length &&\n                mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n                this.loadMedia();\n                break;\n            }\n        }\n    }\n    loadMedia() {\n        this.vgMedia.pause();\n        this.vgMedia.currentTime = 0;\n        // Start buffering until we can play the media file\n        this.stopBufferCheck();\n        this.isBufferDetected = true;\n        this.bufferDetected.next(this.isBufferDetected);\n        // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n        setTimeout(() => this.vgMedia.load(), 10);\n    }\n    play() {\n        // short-circuit if already playing\n        if (this.playPromise ||\n            (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)) {\n            return;\n        }\n        this.playPromise = this.vgMedia.play();\n        // browser has async play promise\n        if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n            this.playPromise\n                .then(() => {\n                this.playPromise = null;\n            })\n                .catch(() => {\n                this.playPromise = null;\n                // deliberately empty for the sake of eating console noise\n            });\n        }\n        return this.playPromise;\n    }\n    pause() {\n        // browser has async play promise\n        if (this.playPromise) {\n            this.playPromise.then(() => {\n                this.vgMedia.pause();\n            });\n        }\n        else {\n            this.vgMedia.pause();\n        }\n    }\n    get id() {\n        // We should return undefined if vgMedia still doesn't exist\n        let result;\n        if (this.vgMedia) {\n            result = this.vgMedia.id;\n        }\n        return result;\n    }\n    get duration() {\n        return this.vgMedia.duration === Infinity\n            ? this.specifiedDuration\n            : this.vgMedia.duration;\n    }\n    set currentTime(seconds) {\n        this.vgMedia.currentTime = seconds;\n        // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n    }\n    get currentTime() {\n        return this.vgMedia.currentTime;\n    }\n    set volume(volume) {\n        this.vgMedia.volume = volume;\n    }\n    get volume() {\n        return this.vgMedia.volume;\n    }\n    set playbackRate(rate) {\n        this.vgMedia.playbackRate = rate;\n    }\n    get playbackRate() {\n        return this.vgMedia.playbackRate;\n    }\n    get buffered() {\n        return this.vgMedia.buffered;\n    }\n    get textTracks() {\n        return this.vgMedia.textTracks;\n    }\n    // @ts-ignore\n    onCanPlay(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlay = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onCanPlayThrough(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlayThrough = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onLoadMetadata(event) {\n        this.isMetadataLoaded = true;\n        this.time = {\n            current: 0,\n            left: 0,\n            total: this.duration * 1000,\n        };\n        this.state = VgStates.VG_PAUSED;\n        // Live streaming check\n        const t = Math.round(this.time.total);\n        this.isLive = t === Infinity;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onWait(event) {\n        this.isWaiting = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onComplete(event) {\n        this.isCompleted = true;\n        this.state = VgStates.VG_ENDED;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onStartPlaying(event) {\n        this.state = VgStates.VG_PLAYING;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onPlay(event) {\n        this.state = VgStates.VG_PLAYING;\n        if (this.vgMaster) {\n            if (!this.syncSubscription || this.syncSubscription.closed) {\n                this.startSync();\n            }\n        }\n        this.startBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onPause(event) {\n        this.state = VgStates.VG_PAUSED;\n        if (this.vgMaster) {\n            if (!this.playAtferSync) {\n                this.syncSubscription.unsubscribe();\n            }\n        }\n        this.stopBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onTimeUpdate(event) {\n        const end = this.buffered.length - 1;\n        this.time = {\n            current: this.currentTime * 1000,\n            total: this.time.total,\n            left: (this.duration - this.currentTime) * 1000,\n        };\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onProgress(event) {\n        const end = this.buffered.length - 1;\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onVolumeChange(event) {\n        // TODO: Save to localstorage the current volume\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onError(event) {\n        // TODO: Handle error messages\n        this.ref.detectChanges();\n    }\n    // http://stackoverflow.com/a/23828241/779529\n    bufferCheck() {\n        const offset = 1 / this.checkInterval;\n        this.currentPlayPos = this.currentTime;\n        if (!this.isBufferDetected &&\n            this.currentPlayPos < this.lastPlayPos + offset) {\n            this.isBufferDetected = true;\n        }\n        if (this.isBufferDetected &&\n            this.currentPlayPos > this.lastPlayPos + offset) {\n            this.isBufferDetected = false;\n        }\n        // Prevent calls to bufferCheck after ngOnDestroy have been called\n        if (!this.bufferDetected.closed) {\n            this.bufferDetected.next(this.isBufferDetected);\n        }\n        this.lastPlayPos = this.currentPlayPos;\n    }\n    startBufferCheck() {\n        this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(() => {\n            this.bufferCheck();\n        });\n    }\n    stopBufferCheck() {\n        if (this.checkBufferSubscription) {\n            this.checkBufferSubscription.unsubscribe();\n        }\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n    }\n    seekTime(value, byPercent = false) {\n        let second;\n        const duration = this.duration;\n        if (byPercent) {\n            second = (value * duration) / 100;\n        }\n        else {\n            second = value;\n        }\n        this.currentTime = second;\n    }\n    addTextTrack(type, label, language, mode) {\n        const newTrack = this.vgMedia.addTextTrack(type, label, language);\n        if (mode) {\n            newTrack.mode = mode;\n        }\n        return newTrack;\n    }\n    ngOnDestroy() {\n        this.vgMedia.src = '';\n        this.mutationObs?.unsubscribe();\n        this.canPlayObs?.unsubscribe();\n        this.canPlayThroughObs?.unsubscribe();\n        this.loadedMetadataObs?.unsubscribe();\n        this.waitingObs?.unsubscribe();\n        this.progressObs?.unsubscribe();\n        this.endedObs?.unsubscribe();\n        this.playingObs?.unsubscribe();\n        this.playObs?.unsubscribe();\n        this.pauseObs?.unsubscribe();\n        this.timeUpdateObs?.unsubscribe();\n        this.volumeChangeObs?.unsubscribe();\n        this.errorObs?.unsubscribe();\n        this.checkBufferSubscription?.unsubscribe();\n        this.syncSubscription?.unsubscribe();\n        this.bufferDetected?.complete();\n        this.bufferDetected?.unsubscribe();\n        this.api.unregisterMedia(this);\n    }\n}\n/** @nocollapse */ VgMediaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgMediaDirective, deps: [{ token: VgApiService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ VgMediaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: VgMediaDirective, selector: \"[vgMedia]\", inputs: { vgMedia: \"vgMedia\", vgMaster: \"vgMaster\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgMediaDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgMedia]',\n                }]\n        }], ctorParameters: function () { return [{ type: VgApiService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { vgMedia: [{\n                type: Input\n            }], vgMaster: [{\n                type: Input\n            }] } });\n\nclass VgPlayerComponent {\n    constructor(ref, api, fsAPI, controlsHidden) {\n        this.api = api;\n        this.fsAPI = fsAPI;\n        this.controlsHidden = controlsHidden;\n        this.isFullscreen = false;\n        this.isNativeFullscreen = false;\n        this.areControlsHidden = false;\n        this.onPlayerReady = new EventEmitter();\n        this.onMediaReady = new EventEmitter();\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.api.registerElement(this.elem);\n    }\n    ngAfterContentInit() {\n        this.medias.toArray().forEach((media) => {\n            this.api.registerMedia(media);\n        });\n        this.fsAPI.init(this.elem, this.medias);\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n        this.api.onPlayerReady(this.fsAPI);\n        this.onPlayerReady.emit(this.api);\n    }\n    onChangeFullscreen(fsState) {\n        if (!this.fsAPI.nativeFullscreen) {\n            this.isFullscreen = fsState;\n            this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\n        }\n        else {\n            this.isNativeFullscreen = fsState;\n        }\n    }\n    onHideControls(hidden) {\n        this.areControlsHidden = hidden;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\n/** @nocollapse */ VgPlayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgPlayerComponent, deps: [{ token: i0.ElementRef }, { token: VgApiService }, { token: VgFullscreenApiService }, { token: VgControlsHiddenService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ VgPlayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.6\", type: VgPlayerComponent, selector: \"vg-player\", outputs: { onPlayerReady: \"onPlayerReady\", onMediaReady: \"onMediaReady\" }, host: { properties: { \"class.fullscreen\": \"this.isFullscreen\", \"class.native-fullscreen\": \"this.isNativeFullscreen\", \"class.controls-hidden\": \"this.areControlsHidden\", \"style.z-index\": \"this.zIndex\" } }, providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService], queries: [{ propertyName: \"medias\", predicate: VgMediaDirective }], ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgPlayerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vg-player', encapsulation: ViewEncapsulation.None, template: `<ng-content></ng-content>`, providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService], styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgApiService }, { type: VgFullscreenApiService }, { type: VgControlsHiddenService }]; }, propDecorators: { isFullscreen: [{\n                type: HostBinding,\n                args: ['class.fullscreen']\n            }], isNativeFullscreen: [{\n                type: HostBinding,\n                args: ['class.native-fullscreen']\n            }], areControlsHidden: [{\n                type: HostBinding,\n                args: ['class.controls-hidden']\n            }], zIndex: [{\n                type: HostBinding,\n                args: ['style.z-index']\n            }], onPlayerReady: [{\n                type: Output\n            }], onMediaReady: [{\n                type: Output\n            }], medias: [{\n                type: ContentChildren,\n                args: [VgMediaDirective]\n            }] } });\n\nconst services = [\n    VgApiService,\n    VgControlsHiddenService,\n    VgFullscreenApiService,\n    VgUtilsService,\n    VgEvents,\n    VgStates\n];\nconst directives = [\n    VgCuePointsDirective,\n    VgMediaDirective\n];\nclass VgCoreModule {\n}\n/** @nocollapse */ VgCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ VgCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.6\", ngImport: i0, type: VgCoreModule, declarations: [VgCuePointsDirective,\n        VgMediaDirective, VgPlayerComponent], imports: [CommonModule], exports: [VgCuePointsDirective,\n        VgMediaDirective, VgPlayerComponent] });\n/** @nocollapse */ VgCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgCoreModule, providers: [...services], imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: VgCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [...services],\n                    declarations: [...directives, VgPlayerComponent],\n                    exports: [...directives, VgPlayerComponent]\n                }]\n        }] });\n\nclass VgMediaElement {\n    get audioTracks() {\n        return null;\n    }\n    // @ts-ignore\n    addTextTrack(kind, label, language) {\n        return null;\n    }\n    // @ts-ignore\n    canPlayType(type) {\n        return null;\n    }\n    load() { }\n    msClearEffects() { }\n    msGetAsCastingSource() {\n        return null;\n    }\n    // @ts-ignore\n    msInsertAudioEffect(_activatableClassId, _effectRequired, _config) { }\n    // @ts-ignore\n    msSetMediaProtectionManager(mediaProtectionManager) { }\n    pause() { }\n    play() {\n        return null;\n    }\n    // @ts-ignore\n    setMediaKeys(mediaKeys) {\n        return null;\n    }\n    // @ts-ignore\n    addEventListener(_type, _listener, _useCapture) { }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VgApiService, VgControlsHiddenService, VgCoreModule, VgCuePointsDirective, VgEvents, VgFullscreenApiService, VgMediaDirective, VgMediaElement, VgPlayerComponent, VgStates, VgUtilsService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}